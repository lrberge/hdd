% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core.R
\name{[.hdd}
\alias{[.hdd}
\title{Extraction of hdd data}
\usage{
\method{[}{hdd}(x, index, ..., file, newfile, replace = FALSE,
  all.vars = FALSE)
}
\arguments{
\item{x}{A hdd file.}

\item{index}{An index, you can use \code{.N} and variable names, like in data.table.}

\item{...}{Other components of the extraction to be passed to data.table.}

\item{file}{Which file to extract from? (Remember hdd data is split in several files.) You can use \code{.N}.}

\item{newfile}{A destination repository. Default is missing. Should be result of the query be saved into a new HDD repository? Otherwise, it is put in memory.}

\item{replace}{Only used if argument \code{newfile} is not missing: default is \code{FALSE}. If the \code{newfile} points to an existing HDD data, then to replace it you must have \code{replace = TRUE}.}

\item{all.vars}{Logical, default is \code{FALSE}. By default, if the first argument of \code{...} is provided (i.e. argument \code{j}) then only variables appearing in all \code{...} plus the variable names found in \code{index} are extracted. If \code{TRUE} all variables are extracted before any selection is done. (This can be useful when the algorithm getting the variable names gets confused in case of complex queries.)}
}
\value{
Returns a data.table extracted from a hdd file (except if newwfile is not missing).
}
\description{
This function extract data from HDD files, in a similar fashion as data.table but with more arguments.
}
\examples{

\dontrun{

# your data set is in the hard drive, in hdd format already.
# Say this data is made of two variables: x and id.
data_hdd = hdd("path/big_data")

# You can use the argument 'file' to subselect slices.
# Let's have some descriptive statistics of the first slice of HDD
summary(data_hdd[, file = 1])
# It extract the data from the first HDD slice and
# returns a data.table in memory, we then apply summary to it

# You can use the special argument .N, as in data.table.
# the following query shows the first and last lines of
# each slice of the HDD data set:
data_hdd[c(1, .N), file = 1:.N]

# Extraction of observations for which variable x is equal to 1
data_hdd[x == 1, ]

# You can apply data.table syntax:
data_hdd[, .(x, mean_x = mean(x))]

# You can use the by clause, but then
# the by is applied slice by slice, NOT on the full data set:
data_hdd[, .(mean_x = mean(x)), by = id]

# If the data you extract does not fit into memory,
# you can create a new HDD file with the argument 'newfile':
data_hdd[, .(x, mean_x = mean(x)), newfile = "path/big_data_bis"]
# check the result:
data_hdd_bis = hdd("path/big_data_bis")
summary(data_hdd_bis)
print(data_hdd_bis)


}

}
